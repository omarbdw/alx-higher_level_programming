>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(0,5)
5
>>> add_integer(1000,0)
1000
>>> add_integer('a',1000)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/mnt/g/My Drive/ALX/ALX/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 18, in add_integer
    raise TypeError(f"a must be an integer")
TypeError: a must be an integer
>>> add_integer(5000,'m')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/mnt/g/My Drive/ALX/ALX/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 20, in add_integer
    raise TypeError(f"b must be an integer")
TypeError: b must be an integer
>>> add_integer()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: add_integer() missing 1 required positional argument: 'a'
>>> add_integer(0,0)
0
>>> add_integer(5.2,0)
5
>>> add_integer(0,1000.35)
1000